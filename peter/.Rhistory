setwd('~/Work/NZILBB/convergence_esp_2/ESP-bots-vs-humans/peter/')
library(Hmisc)
library(stringr)
library(dplyr)
library(stringdist)
library(lme4)
library(effects)
esp2 <- read.csv('~/Work/NZILBB/convergence_esp_2/ESP-bots-vs-humans/ESP2DataOxford.csv') %>% mutate(resp_bot_reg = ifelse(as.character(robotSelects) == as.character(weakPast),T,F))
esp2nonce <- esp2 %>% filter(verbStatus == 'NONCE')
training <- read.csv('~/Work/NZILBB/convergence_esp/baseline_files_1/celex_verbs_with_categories_csv_fixed_moder.txt')
matcher <- read.csv('nonce_verb_matcher.txt') %>% rename(moder = class)
# word,disc,moder,class # expected by GCM funcs
esp2nonce <- esp2nonce %>% rename(word = target)
esp2nonce <- esp2nonce %>% select(-category) %>% merge(matcher)
esp2nonce$phase <- recode(esp2nonce$phase, postTest = 'test2', preTest = 'test1')
# person_ress <- as.list(NULL)
#
# for (i in 1:plength){
# print(i)
# person_id <- unique(esp2nonce$participant_id)[i]
# person_res <- runGuyNoFeature(esp2nonce,training,person_id)
# person_ress[[i]] <- person_res
# }
# person_ress_df <- do.call('rbind', person_ress)
# save(person_ress_df, file = 'esp2gcm.rda')
load('esp2gcm.rda')
gcm_res <- person_ress_df %>% rename(gcm_reg = verb_esp_gcm3_reg)
test2 <- esp2nonce %>% filter(phase == 'test2')
# test2 %>% select(participant_id,disc)
# person_ress_df %>% select(participant_id,disc)
test2 <- merge(test2,gcm_res)
baseline <- read.csv('~/Work/NZILBB/convergence_esp/esp_paper_essence_2018/esp_paper_baseline_christmas.txt')
baseline <- baseline %>% select(word,celex_gcm_wf,celex_gcm_nof,celex_mgl_nof,celex_mgl_wf) %>% unique
test2$word %>% unique %>% sort
baseline$word %>% unique %>% sort
test2b <- merge(baseline,test2)
rm(test2b)
rm(test2)
test2 <- esp2nonce %>% filter(phase == 'test2')
# test2 %>% select(participant_id,disc)
# person_ress_df %>% select(participant_id,disc)
test2 <- merge(test2,gcm_res)
rm(test2)
View(gcm_res)
head(test2,1)
test2 <- esp2nonce %>% filter(phase == 'test2')
test2 <- esp2nonce %>% filter(phase == 'test2')
head(test2,1)
esp2nonce <- esp2 %>% filter(verbStatus == 'NONCE')
training <- read.csv('~/Work/NZILBB/convergence_esp/baseline_files_1/celex_verbs_with_categories_csv_fixed_moder.txt')
matcher <- read.csv('nonce_verb_matcher.txt') %>% rename(moder = class)
# word,disc,moder,class # expected by GCM funcs
esp2nonce <- esp2nonce %>% rename(word = target)
matcher <- read.csv('nonce_verb_matcher.txt') %>% rename(moder = class)
# word,disc,moder,class # expected by GCM funcs
esp2nonce <- esp2nonce %>% rename(word = target)
esp2nonce <- esp2nonce %>% select(-category) %>% merge(matcher)
esp2nonce$phase <- recode(esp2nonce$phase, postTest = 'test2', preTest = 'test1')
# test2 %>% select(participant_id,disc)
# person_ress_df %>% select(participant_id,disc)
test2 <- merge(test2,gcm_res)
rm(test2)
test2 <- esp2nonce %>% filter(phase == 'test2')
# test2 %>% select(participant_id,disc)
# person_ress_df %>% select(participant_id,disc)
test2 <- merge(test2,gcm_res)
baseline <- read.csv('~/Work/NZILBB/convergence_esp/esp_paper_essence_2018/esp_paper_baseline_christmas.txt')
baseline <- baseline %>% select(word,celex_gcm_wf,celex_gcm_nof,celex_mgl_nof,celex_mgl_wf) %>% unique
test2$word %>% unique %>% sort
baseline$word %>% unique %>% sort
# test2$word %>% unique %>% sort
# baseline$word %>% unique %>% sort
test2b <- merge(baseline,test2)
write.csv(test2b, file = 'ESP2_nonce_verbs_gcm.txt', row.names=F)
setwd('~/Work/NZILBB/convergence_esp_2/ESP-bots-vs-humans/peter/')
library(dplyr)
library(lme4)
test2 <- read.delim('ESP2_nonce_verbs_gcm.txt')
View(test2)
test2 <- read.csv('ESP2_nonce_verbs_gcm.txt')
test2$gcm_diff <- test2$celex_gcm_nof - test2$gcm_reg
fit1d <- glmer(postReg ~ celex_gcm_nof + gcm_diff + (1 | participant_id), data = test2, family="binomial", control=glmerControl(optimizer="bobyqa"))
summary(fit1d)
test2$gcm_diff <- test2$gcm_reg - test2$celex_gcm_nof
fit1d <- glmer(postReg ~ celex_gcm_nof + gcm_diff + (1 | participant_id), data = test2, family="binomial", control=glmerControl(optimizer="bobyqa"))
summary(fit1d)
